<div class="modal fade" id="AddAccount" role="dialog">
  <div class="modal-dialog account-modal-dialog">

    <!-- Modal content-->
    <div class="modal-content account-modal-content">
      <div class="modal-header account-modal-header">
        <a href="#"><%= image_tag('logo_white.svg', :class => 'img-responsive login-modal-logo', :alt => "logo") %></a>
        <button type="button" class="close account-modal-close" data-dismiss="modal">&times; </button>
      </div>
      <div class="modal-body account-modal-body">
        <div class="add-another-account">Add another account</div>

        <div class="account-content">
          <p><%= image_tag('facebook-icon.png', :alt => "fb") %> &nbsp; &nbsp;<a data-trigger="modal" data-target="AddFacebookAccount" href="javascript:" data-dismiss="modal">Add Facebook Account</a></p>
          <p><%= image_tag('twitter-icon.png', :alt => "twitter") %> &nbsp; &nbsp;<a href="<%= new_user_session_path %>">Add Twitter Account</a></p>
        </div>
      </div>
    </div>

  </div>
</div>

<%= render 'profile/add_facebook_account', remote: remote %>

<script>
    (function() {
        $.getScript('//connect.facebook.net/en_US/all.js', function(){
            FB.init({
                appId: '<%= CONFIG[:fb_app_id] %>',
                version: 'v2.4'
            });

            var createForm = function(authResp) {
                FB.api('/me/accounts?type=pages&limit=50&fields=id,name,likes,picture', function(resp) {
                    var selected = $('.social-account-tabs .js-social-account-tab').map(function() {
                      return $(this).attr('id');
                    }).toArray();

                    var engaged = $('.social-account-tabs .js-social-account-tab').filter(function() {
                            return $(this).data('engaged') > 0;
//                        }
                    }).map(function() {
                        return $(this).attr('id');
                    }).toArray();

                    console.log('engaged facebook account are ' + engaged );

                    var data = resp.data.filter(function(page) {
                        return page.likes >= <%= CONFIG[:min_fb_likes_for_registration] %>;
                    }).map(function(page) {
                        page.selected = $.inArray('fb_' + page.id, selected) > -1;
                        page.engaged = $.inArray('fb_' + page.id, engaged) > -1;
                        return page;
                    });

                    var html = template({
                        accounts: data
                    });
                    $('#AddFacebookAccount').remove();
                    $('body').append(html);
                    $('#AddFacebookAccount').modal().find('[name="access_token"]').val(authResp.accessToken);
                    $('#AddFacebookAccount').find('[name="expires_in"]').val(authResp.expiresIn);
                });
            };

            var template;
            $(document).ready(function () {
                var source = $("#add-facebook-account-template").html();
                template = Handlebars.compile(source);
            });
            $(document).on('click', '.js-add-account', function () {
                FB.getLoginStatus(function(resp) {
                    if (resp.status === 'connected') {
                        createForm(resp.authResponse);
                    }
                    else {
                        FB.login(function(resp) {
                            if (resp.authResponse) {
                                createForm(resp.authResponse);
                            } else {
                                // todo: alert?
                            }
                        });
                    }
                });
            });

            $(document).on('click', '.js-clickable', function(event) {
                var ip = $(this).find('input[type="checkbox"]');
                var targetIsIp = ip.get(0) == event.target;
                var ipIsReadonly = ip.is('[readonly]');

                if (!ipIsReadonly && !targetIsIp) {
                    ip.prop('checked', !ip.prop('checked'));
                    return false;
                } else if (ipIsReadonly && targetIsIp) {
                    return false;
                }
            });
        });
    })();
</script>
