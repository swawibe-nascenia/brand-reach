<%= stylesheet_link_tag 'campaigns.css', media: 'all' %>

<% title 'Facebook Insights' %>

<% content_for :head do %>
    <%= stylesheet_link_tag  'ammap/ammap', media: 'all' %>
    <%= javascript_include_tag 'ammap/ammap' %>
    <%= javascript_include_tag 'ammap/maps/js/continentsLow' %>
    <%= javascript_include_tag 'ammap/amcharts' %>
<% end %>

<section class="influence-facebook-content">
  <div class="row campaign-view">
    <%= form_tag(nil, method: 'get') do %>
        <%= label_tag :name, 'Choose an account' %>
        <%= select_tag 'id', options_from_collection_for_select(@accounts, 'id', 'name', @account.id), prompt: 'Choose an account to view the statistics', class: '' %>
        <%= button_tag 'VIEW', class: 'btn-fb-insight-camp-show' %>
    <% end %>
  </div>

  <p class="text-right">
    Last updated: <span data-datetime="<%= @account.insights_updated_at.try(:strftime,'%B %d, %Y %l:%M %P') %>"><%= @account.insights_updated_at.try(:strftime,'%B %d, %Y %l:%M %P') %></span>
    <a class="load-page" href="javascript:" onclick="window.location='?id=<%= @account.id %>&refresh=1'">
      <%= image_tag asset_path('Refresh_icon.png') %>
    </a>

    <script>
      $('[data-datetime]').each(function() {
        var dt = new Date($(this).data('datetime'));
        var offset = dt.getTimezoneOffset();
        dt.setMinutes(dt.getMinutes() - offset);

        $(this).text(dt.toLocaleDateString('en-US', {
          year: 'numeric', month: 'long',
          day: 'numeric', hour: 'numeric', minute: '2-digit'
        }));
      });
    </script>
  </p>

  <div class="br-container">
    <!-- Info boxes -->
    <%= render 'page_insights', account: @account %>

    <div class="map-chart">
      <div class="box">
        <div class="box-body">
          <div class="pad">
            <!-- Map will be created here -->
            <div id="world-map-markers" style="height: 325px;"></div>

            <script>
              (function() {
                var map = AmCharts.makeChart( "world-map-markers", {
                  type: "map",

                  areasSettings: {
                    autoZoom: false,
                    rollOverOutlineColor: "#000000",
                    selectedColor: "#000000",
                    outlineAlpha: 1,
                    outlineColor: "#FFFFFF",
                    outlineThickness: 1,
                    color: "#000000"
                  },

                  dataProvider: {
                    map: "continentsLow",

                    areas: ['africa', 'asia', 'australia', 'europe', 'north_america', 'south_america'].map(function(continent) {
                      return {
                        id: continent,
                        mouseEnabled: false,
                        pattern: {
                          url: '<%= url_to_image('map-pattern.png') %>',
                          width: 5,
                          height: 5
                        }
                      };
                    }),

                    images: <%= @account.country_map_data.map{ |data| data[:imageURL] = path_to_image('map-marker.svg'); data }.to_json.html_safe %>
                  },
                  zoomControl: {
                    homeButtonEnabled: false
                  }
                });
              })();
            </script>
          </div>
        </div>
      </div>

      <span class="color-gray stat-gender">STATISTICS BY GENDER AGE RANGE</span>
      <div class="box">
        <div class="box-body">
          <div class="pad">
            <!-- Map will be created here -->
            <div id="show-age-map" style="height: 325px;"></div>

            <script>
              var chart = AmCharts.makeChart( "show-age-map", {
                type: "serial",
                depth3D: 30,
                angle: 40,
                colors: ["#a9e5ed", "#EA358C"],
                legend: {
                  horizontalGap: 10,
                  useGraphSettings: true,
                  markerSize: 10
                },

                dataProvider: <%= @account.age_range_data.to_json.html_safe %>,

                "valueAxes": [ {
                  "stackType": "regular",
                  "axisAlpha": 0,
                  "gridAlpha": 0
                } ],

                "graphs": [ {
                  "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>Age [[category]]: <b>[[value]]</b></span>",
                  "fillAlphas": 0.8,
                  "labelText": "[[value]]",
                  "lineAlpha": 0.4,
                  "title": "MALE",
                  "type": "column",
                  "color": "#000000",
                  "valueField": "male"
                }, {
                  "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>Age [[category]]: <b>[[value]]</b></span>",
                  "fillAlphas": 0.8,
                  "labelText": "[[value]]",
                  "lineAlpha": 0.4,
                  "title": "FEMALE",
                  "type": "column",
                  "color": "#000000",
                  "valueField": "female"
                } ],
                "categoryField": "age_range",
                "categoryAxis": {
                  "gridPosition": "start",
                  "axisAlpha": 0,
                  "gridAlpha": 0,
                  "position": "left"
                }
              });
            </script>
          </div>
        </div>
      </div>

      <section class="chart-info">
        <span class="color-gray stat-gender">STATISTICS BY GENDER</span>
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
          <div class="font-below-statistic clearfix">
            <div class="gender-stat-legend unit-in">
              <span>Units in 1000s</span>
            </div>
            <div class="gender-stat-legend facebook-female">
              <span class="square-box bg-color-pink"></span>
              Female
            </div>
            <div class="gender-stat-legend">
              <span class="square-box bg-color-blue chart-male"></span>
              Male
            </div>
            <!--<div class="gender-stat-legend">
              <div class="dropdown">
                <button class="btn btn-primary dropdown-toggle custom-drop-down-button" type="button" data-toggle="dropdown">This Week
                  <i class="fa fa-angle-down"></i>
                </button>
                <ul class="dropdown-menu">
                  <li><a href="#">This Month</a></li>
                </ul>
              </div>
            </div>-->
          </div>
        </div>
      </section>
      <!-- Main row -->
      <div class="chart">
        <!-- Sales Chart Canvas -->
        <canvas id="salesChart" height="180"></canvas>
      </div>

      </br>
      </br>
      <span class="color-gray stat-gender">STATISTICS OF TOTAL ACTION BUTTON CLICKS BY GENDER AGE RANGE</span>
      <div class="box">
        <div class="box-body">
          <div class="pad">
            <!-- Map will be created here -->
            <div id="show-action-age-map" style="height: 325px;"></div>
          </div>
        </div>
      </div>

      <script>
        var chart = AmCharts.makeChart( "show-action-age-map", {
          type: "serial",
          depth3D: 30,
          angle: 40,
          colors: ["#a9e5ed", "#EA358C"],
          legend: {
            horizontalGap: 10,
            useGraphSettings: true,
            markerSize: 10
          },

          dataProvider: <%= @account.age_range_action_data.to_json.html_safe %>,

          "valueAxes": [ {
            "stackType": "regular",
            "axisAlpha": 0,
            "gridAlpha": 0
          } ],

          "graphs": [ {
            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>Age [[category]]: <b>[[value]]</b></span>",
            "fillAlphas": 0.8,
            "labelText": "[[value]]",
            "lineAlpha": 0.4,
            "title": "MALE",
            "type": "column",
            "color": "#000000",
            "valueField": "male"
          }, {
            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>Age [[category]]: <b>[[value]]</b></span>",
            "fillAlphas": 0.8,
            "labelText": "[[value]]",
            "lineAlpha": 0.4,
            "title": "FEMALE",
            "type": "column",
            "color": "#000000",
            "valueField": "female"
          } ],
          "categoryField": "age_range",
          "categoryAxis": {
            "gridPosition": "start",
            "axisAlpha": 0,
            "gridAlpha": 0,
            "position": "left"
          }
        });
      </script>

      </br>
      <span class="color-gray stat-gender">STATISTICS OF PEOPLE WHO CLICKED ACTION BUTTON BY DEVICE</span>
      <div class="box">
        <div class="box-body">
          <div class="pad">
            <!-- Map will be created here -->
            <div id="show-action-device-map" style="height: 325px;"></div>
          </div>
        </div>
      </div>

      <script>
        var chart = AmCharts.makeChart( "show-action-device-map", {
          type: "serial",
          depth3D: 30,
          angle: 40,
          colors: ["#a9e5ed", "#EA358C"],
          legend: {
            horizontalGap: 60,
            useGraphSettings: true,
            markerSize: 10
          },

          dataProvider: <%= @account.action_device_data.to_json.html_safe %>,

          "valueAxes": [ {
            "stackType": "regular",
            "axisAlpha": 0,
            "gridAlpha": 0
          } ],

          "graphs": [ {
            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
            "fillAlphas": 0.8,
            "labelText": "[[value]]",
            "lineAlpha": 0.4,
            "title": "PEOPLE ON MOBILE DEVICES",
            "type": "column",
            "color": "#000000",
            "valueField": "mobile"
          }, {
            "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
            "fillAlphas": 0.8,
            "labelText": "[[value]]",
            "lineAlpha": 0.4,
            "title": "PEOPLE ON COMPUTERS",
            "type": "column",
            "color": "#000000",
            "valueField": "computer"
          } ],
          "categoryField": "user_group",
          "categoryAxis": {
            "gridPosition": "start",
            "axisAlpha": 0,
            "gridAlpha": 0,
            "position": "left"
          }
        });
      </script>

      <% if @account.action_line_chart_data[:datasets].present? %>
          <section class="action-chart-info">
            </br>
            <span class="color-gray stat-gender">STATISTICS BY TOTAL ACTIONS ON PAGE</span>
          </section>

          <div class="action-chart">
            </br>
            </br>
            <!-- Total Action Chart Canvas -->
            <canvas id="actionChart" height="100"></canvas>
          </div>

          <script>
            // Get context with jQuery - using jQuery's .get() method.
            var actionChartCanvas = $("#actionChart").get(0).getContext("2d");
            // This will get the first returned node in the jQuery collection.
            var actionChart = new Chart(actionChartCanvas);

            var actionChartData = {
              labels: <%= @account.action_line_chart_data[:labels].to_json.html_safe %>,
              datasets: <%= @account.action_line_chart_data[:datasets].to_json.html_safe %>
            };

            var actionChartOptions = {
              //Boolean - If we should show the scale at all
              //showScale: true,
              //Boolean - Whether grid lines are shown across the chart
              scaleShowGridLines: true,
              //String - Colour of the grid lines
              scaleGridLineColor: "rgba(0,0,0,.05)",
              //Number - Width of the grid lines
              scaleGridLineWidth: 1,
              //Boolean - Whether to show horizontal lines (except X axis)
              scaleShowHorizontalLines: true,
              //Boolean - Whether to show vertical lines (except Y axis)
              scaleShowVerticalLines: false,
              //Boolean - Whether the line is curved between points
              bezierCurve: true,
              //Number - Tension of the bezier curve between points
              bezierCurveTension: 0.3,
              //Boolean - Whether to show a dot for each point
              pointDot: false,
              //Number - Radius of each point dot in pixels
              pointDotRadius: 4,
              //Number - Pixel width of point dot stroke
              pointDotStrokeWidth: 1,
              //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
              pointHitDetectionRadius: 20,
              //Boolean - Whether to show a stroke for datasets
              datasetStroke: true,
              //Number - Pixel width of dataset stroke
              datasetStrokeWidth: 2,
              //Boolean - Whether to fill the dataset with a color
              datasetFill: false,
              //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
              maintainAspectRatio: false,
              //Boolean - whether to make the chart responsive to window resizing
              responsive: true
            };

            //Create the line chart
            actionChart.Line(actionChartData, actionChartOptions);
          </script>
      <% end %>

      <% if @account.people_action_line_chart_data[:datasets].present? %>
          <section class="people-action-info">
            </br>
            </br>
            <span class="color-gray stat-gender">STATISTICS BY PEOPLE WHO CLICKED ACTION BUTTON</span>
          </section>

          <div class="people-action-chart">
            </br>
            </br>
            <canvas id="peopleActionChart" height="100"></canvas>
          </div>

          <script>
            // Get context with jQuery - using jQuery's .get() method.
            var peopleActionChartCanvas = $("#peopleActionChart").get(0).getContext("2d");
            // This will get the first returned node in the jQuery collection.
            var peopleActionChart = new Chart(peopleActionChartCanvas);

            var peopleActionChartData = {
              labels: <%= @account.people_action_line_chart_data[:labels].to_json.html_safe %>,
              datasets: <%= @account.people_action_line_chart_data[:datasets].to_json.html_safe %>
            };

            var peopleActionChartOptions = {
              //Boolean - If we should show the scale at all
              //showScale: true,
              //Boolean - Whether grid lines are shown across the chart
              scaleShowGridLines: true,
              //String - Colour of the grid lines
              scaleGridLineColor: "rgba(0,0,0,.05)",
              //Number - Width of the grid lines
              scaleGridLineWidth: 1,
              //Boolean - Whether to show horizontal lines (except X axis)
              scaleShowHorizontalLines: true,
              //Boolean - Whether to show vertical lines (except Y axis)
              scaleShowVerticalLines: false,
              //Boolean - Whether the line is curved between points
              bezierCurve: true,
              //Number - Tension of the bezier curve between points
              bezierCurveTension: 0.3,
              //Boolean - Whether to show a dot for each point
              pointDot: false,
              //Number - Radius of each point dot in pixels
              pointDotRadius: 4,
              //Number - Pixel width of point dot stroke
              pointDotStrokeWidth: 1,
              //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
              pointHitDetectionRadius: 20,
              //Boolean - Whether to show a stroke for datasets
              datasetStroke: true,
              //Number - Pixel width of dataset stroke
              datasetStrokeWidth: 2,
              //Boolean - Whether to fill the dataset with a color
              datasetFill: false,
              //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
              maintainAspectRatio: false,
              //Boolean - whether to make the chart responsive to window resizing
              responsive: true
            };

            //Create the line chart
            peopleActionChart.Line(peopleActionChartData, peopleActionChartOptions);
          </script>
      <% end %>
    </div>

    <script>
      // Get context with jQuery - using jQuery's .get() method.
      var salesChartCanvas = $("#salesChart").get(0).getContext("2d");
      // This will get the first returned node in the jQuery collection.
      var salesChart = new Chart(salesChartCanvas);

      var salesChartData = {
        labels: <%= @account.gender_line_chart_data[:labels].to_json.html_safe %>,
        datasets: <%= @account.gender_line_chart_data[:datasets].to_json.html_safe %>
      };

      var salesChartOptions = {
        //Boolean - If we should show the scale at all
        showScale: true,
        //Boolean - Whether grid lines are shown across the chart
        scaleShowGridLines: true,
        //String - Colour of the grid lines
        scaleGridLineColor: "rgba(0,0,0,.05)",
        //Number - Width of the grid lines
        scaleGridLineWidth: 1,
        //Boolean - Whether to show horizontal lines (except X axis)
        scaleShowHorizontalLines: true,
        //Boolean - Whether to show vertical lines (except Y axis)
        scaleShowVerticalLines: false,
        //Boolean - Whether the line is curved between points
        bezierCurve: true,
        //Number - Tension of the bezier curve between points
        bezierCurveTension: 0.3,
        //Boolean - Whether to show a dot for each point
        pointDot: false,
        //Number - Radius of each point dot in pixels
        pointDotRadius: 4,
        //Number - Pixel width of point dot stroke
        pointDotStrokeWidth: 1,
        //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
        pointHitDetectionRadius: 20,
        //Boolean - Whether to show a stroke for datasets
        datasetStroke: true,
        //Number - Pixel width of dataset stroke
        datasetStrokeWidth: 2,
        //Boolean - Whether to fill the dataset with a color
        datasetFill: true,
        //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
        maintainAspectRatio: false,
        //Boolean - whether to make the chart responsive to window resizing
        responsive: true
      };

      <% if @account.gender_line_chart_data[:datasets].present? %>
      //Create the line chart
      salesChart.Line(salesChartData, salesChartOptions);
      <% else %>
      $('.chart-info').hide();
      $('.chart').hide();
      <% end %>
    </script>

    <!-- TABLE: LATEST ORDERS -->

    <div class="color-gray stat-country bg-white">

      <br>
      <br>
      STATISTICS BY COUNTRY / CITIES
    </div>

    <div class="box box-info">
      <div class="box-body">
        <table class="table no-margin table-striped table-responsive statistic-table active" id="stats-countries">
          <thead>
          <tr>
            <th>
              <div class="dropdown">
                <label class="drop-down-label">VIEW BY:</label>
                <button class="btn view-country dropdown-toggle" type="button" data-toggle="dropdown">
                  <i class="fa fa-angle-down angle-down-cities pull-right"></i>
                  COUNTRY
                </button>
                <ul class="dropdown-menu custom-dropdown-menu">
                  <li><a href="#stats-cities" class="js-stats-toggle">CITIES</a></li>
                </ul>
              </div>
            </th>
            <th> <span class="glyphicon icon-love"></span> &nbsp;Likes </th>
            <th> <span class="glyphicon icon-comment"></span> &nbsp;Post Reach </th>
          </tr>
          </thead>
          <tbody>
          <% @account.country_data.each do |country_name, data| %>
              <tr>
                <td><span class="flag-icon flag-icon-<%= data[:country_code].downcase %>"></span> <%= country_name %></td>
                <td><%= number_with_delimiter(data[:likes]) %></td>
                <td><%= number_with_delimiter(data[:reach]) %></td>
              </tr>
          <% end %>
          </tbody>
        </table>

        <table class="table no-margin table-striped table-responsive statistic-table" id="stats-cities">
          <thead>
          <tr>
            <th>
              <div class="dropdown">
                <label class="drop-down-label">VIEW BY:</label>
                <button class="btn view-country dropdown-toggle" type="button" data-toggle="dropdown">
                  <i class="fa fa-angle-down angle-down-cities pull-right"></i>
                  Cities
                </button>
                <ul class="dropdown-menu custom-dropdown-menu">
                  <li><a href="#stats-countries" class="js-stats-toggle">Country</a></li>
                </ul>
              </div>
            </th>
            <th> <span class="glyphicon icon-love"></span> &nbsp;Likes </th>
            <th> <span class="glyphicon icon-comment"></span> &nbsp;Post Reach </th>
          </tr>
          </thead>
          <tbody>
          <% @account.city_data.each do |city_name, data| %>
              <tr>
                <td><%= city_name %></td>
                <td><%= number_with_delimiter(data[:likes]) %></td>
                <td><%= number_with_delimiter(data[:reach]) %></td>
              </tr>
          <% end %>
          </tbody>
        </table>

        <script>
          $('.js-stats-toggle').click(function() {
            $('.statistic-table').removeClass('active');
            $($(this).attr('href')).addClass('active');
            return false;
          });
        </script>

        <p class="text-muted">
          <small>
            <br/>
            * These numbers are updated at certain intervals by Facebook and do not reflect the current statistics.
          </small>
        </p>
      </div>
    </div>

    <!-- /.box-header -->
  </div>
</section>

<script type="text/javascript">
  $(document).ready(function () {
    $('select').selectBox();
  });
</script>
